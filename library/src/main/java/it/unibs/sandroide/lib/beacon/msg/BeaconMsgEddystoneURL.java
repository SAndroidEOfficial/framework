/**
 * Copyright (c) 2016 University of Brescia, Alessandra Flammini, All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package it.unibs.sandroide.lib.beacon.msg;

import org.altbeacon.beacon.Beacon;
import org.altbeacon.beacon.BeaconParser;

import java.io.UnsupportedEncodingException;

public class BeaconMsgEddystoneURL extends BeaconMsgBase {

    public static String MSG_LAYOUT = BeaconParser.EDDYSTONE_URL_LAYOUT;
    //public static String MSG_LAYOUT = "s:0-1=feaa,m:2-2=10,p:3-3:-41,i:4-13,i:14-19"; //BeaconParser.EDDYSTONE_URL_LAYOUT;
    public static String MSG_SERVICEUUID = "feaa";
    public static String MSG_TYPECODE = "10";

    public String mUrl="";

    public BeaconMsgEddystoneURL(Beacon b) {
        super(b);
    }

    @Override
    public BeaconMsgBase parse() {
        if (!(this.MSG_SERVICEUUID.toUpperCase().equals(Long.toHexString(this.getServiceUuid()).toUpperCase()) &&
                this.MSG_TYPECODE.toUpperCase().equals(Long.toHexString(this.getBeaconTypeCode()).toUpperCase()))) {
            return null;
        }
        // Note: Here you can put your code to parse message data fields into convenient instance class variables
        try {
            mUrl = new String(this.getId1().toByteArray(), "UTF-8");
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
        return this;
    }

    @Override
    public String getImage() {
        return BASE64_IMAGE;
    }

    private static String BASE64_IMAGE = "";

}
